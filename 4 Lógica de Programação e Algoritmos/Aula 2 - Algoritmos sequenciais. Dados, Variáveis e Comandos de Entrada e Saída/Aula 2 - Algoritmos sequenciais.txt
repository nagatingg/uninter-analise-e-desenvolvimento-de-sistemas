Algoritmos sequenciais. Dados, Variáveis e Comandos de Entrada e Saída 
- Prof. Vinicius Pozzobon Borin

---------------  Aula 2 - Vinicius Pozzobon Borin ---------------------

Objetivo desta aula é darmos os primeiros passos em programação
Construção de nossos primeiros algoritmos

A estrutura de conteúdos desta aula é a seguinte:
    Onde programar em Python?
    Quais partes compõem um algoritmo computacional?
    Como escrevermos algo na tela?
    Como manipulamos dados e variáveis?
    Como realizamos operações aritméticas?
    Como lemos informações do teclado?

-------------- Ciclo de processamento de dados

ENTRADA   > PROCESSAMENTO > SAÍDA
ER (x, y) > res < x + y   > ESCREVER (res)
-Borin, 2020

Olá, mundo!
print("Olá, mundo!")

Função de Saída
-Print: comando, instrução, função

Escrever     > print
pseudocódigo > Python

Concatenando mensagens e números:
print("O resultado da soma de 2 + 3 é: ", 2 + 3)


-------------- Variáveis, dados e seus tipos

Dados
    Sequência de símbolos quantificados ou quantificáveis (Puga,2009,p.18)
    Valores fornecidos via entrada e manipulados ao longo do programa

Variáveis
    Nome dado a uma região da memória do programa
    Sempre que você invocar o nome de uma variável no programa, seu bloco de memória
        será automaticamente carregado da RAM

Lê-se: a variável "nota" recebe o dado 8,5
    nome = 8.5
    = > símbolo de atribuição

nota = 8.5
disciplina = "Logica de programação e algoritmos"

print(nota)
print(disciplina)

Regras para nomes de variáveis
    Nunca inicie o nome de uma variável com um número

Tipos primitivos de dados
    Numérico (inteiro e ponto flutuante)
    Caractere
    Literal/booleana

Variáveis numéricas
    Quando queremos realizar operações aritméticas
    Inteiro (int) - números sem casas decimais
    Ponto flutuante (float) - números com casas decimais

Variáveis lógicas / booleanas
    Armazena um bit. Dois estados:
        Verdadeiro ou falso
        Nível lógico ou falso
        Nível lógico alto ou baixo
        1 ou 0

Exemplo:
a = 1
b = 5

resposta = a == b
print(resposta)
    False > resultado

---

resposta = a != b
print(resposta)
    True > resposta

Variáveis de cadeias de caracteres (strings)
    Armazenam conjuntos de símbolos encadeados, incluindo acentuação, pontuação etc

Exemplo:
    frase = "Olá, mundo"
    print(frase[0])
    O > resposta

-------------- Manipulações com strings
Concatenação
    Juntar/somar strings

s1 = "Lógica de Programação"
s1 = s1 + " e Algoritmos"
print(s1)
    Lógica de Programação e Algoritmos > resposta

s1 = "A" + "-" * 10 + "B"
print(s1)
    A----------B > resposta

Composição
    Juntar diferentes variáveis e strings

Exemplo:
    nota = 8.5
    s1 = "Você %f " % nota
    print(s1)
        Você 8.5000000 > resposta

    nota = 8.5
    s1 = "Você %.2f " % nota > limitando apenas 2 casas decimais
    print(s1)
        Você 8.50 > resposta

    nota = 8.5
    disciplina = "Algoritmos"
    s1 = "Você %.2f " %s (nota, disciplina)
    print(s1)
        Você 8.50 > resposta

Porque usar f ou s
    Composição
        Lista de marcadores de posição
        Marcador     Tipo
        %d ou %i    Números inteiros
        %f          Números de ponto flutuante
        %s          Strings

Composição moderna
    "Você tirou %d na disciplina de %d"
    % (nota, disciplina)

    "Você tirou {} na disciplina de {}"
    .format (nota, disciplina)

Fatiamento
    Podemos recortar/fatiar um pedaço da string
Exemplo:

s1 = "Lógica de Programação e Algoritmos"
print(s1[0:6])
    Lógica > pegou 5 caracteres que eu selecionei

Tamanho (length)
    Podemos descobrir o tamanho da cadeia de caracteres com uma função chamada len
Exemplo:
    s1 = "Lógica de Programação e Algoritmos"
    tamanho = len(s1)
    print(tamanho)
        34 = tamanho da string

-------------- Função de entrada e fluxo de execução do programa
Função de entrada
    input: comando, instrução, função

    Ler          > input
    Pseudocódigo > Python

input("Mensagem")

idade = input("Qual sua idade?")
print(idade)
    Qual sua idade? 50
    50

nome = input("Qual seu nome")
print("Olá {}, sejam bem-vindo" .format(nome))
    Qual seu nome? Wesley
    Olá Wesley, seja bem-vindo!

Convertendo dados de entrada
    O input sempre retorna um dado do tipo string
    Se quisermos um dado numérico, utilizamos a função int ou float antes do input

Exemplo:
idade = float(input("Qual sua idade?"))
print(idade)
    Qual sua idade? 50
    50

Exercício
    Desenvolva um algoritmo que solicite ao usuário dois números inteiros.
    Imprima a soma destes dois números na tela

// Feito antes da correção
numero1 = int(input("Digite o primeiro número: "))
print(numero1)
numero2 = int(input("Digite o segundo número: "))
print(numero2)
soma = numero1 + numero2
print("A soma dos dois números é: " + soma)

Resposta do professor
x = int(input("Digite um número inteiro: "))
y = int(input("Digite outro número inteiro: "))
//Maneira clássica
res = "O resultado da soma de %i com %i é %i." % (x, y, x + y)
//Maneira moderna
res = "O resultado da soma de {} com {} é {}." .format(x, y, x + y)
print(res)
