Análise de Sistemas - Adriana Bastos

---------------  Aula 6 - Outros Diagramas ---------------------

    Se os requisitos não forem bem analisados o software não for projetado de maneira adequada, fica mais difícil projetar uma solução que realmente resolva o problema do cliente.

---- Conhecendo o diagrama de estado

    O diagrama de estado, para a UML,´e entendido como um diagrama dinâmico, pois mostra a evolução de estados em um objeto, ao longo da sua vida no software, ou seja, mostra o comportamento de um objeto a partir de determinados eventos

    É importante ressaltar que sua construção é recomendada apenas quando existir certo grau de complexidade na transição de um estado para outro de um ou mais objetos envolvidos no processo de negócio que está sendo modelado.

    Elemento de um Diagrama de Estado
        Objeto: 
            É o elementos que sofre a mudança de estado a partir de um evento

        Evento: 
            É uma ocorr~encia que gera uma mudança de estado

        Estado: 
            É a condição de um objeto em determinado momento no tempo - o tempo entre os eventos

        Transição:
            É um relacionamento entre dois estados, indicando que, quando um evento ocorre, o objeto muda do estado anterior para o estado seguinte

---- Conhecendo o Diagrama de Atividades

    Os Diagramas de Atividades mostram as atividades que compõem um processo do sistema e seu fluxo de controle

    Para modelar o Diagrama de Atividades, é preciso decompor um processo em suas atividades, compreendendo quais delas são sequenciais, quais são concorrentes equais são executadas paralelamente em fluxo de negócio

    O Diagrama de Atividades possui uma notação diferente por conta da UML, porém ele tem o mesmo objetivo da modelagem BPM, que já estudamos em outro momento

    Com o diagrama de atividades, é possível entender o conjunto de ações que compõe uma funcionalidade, bem como o funcionamento de um requisito, isto é, a funcionalidade do software

Elementos do Diagrama de Atividades
    Estado inicial e final:
        Todos os diagramas de atividades possuem pelo menos um estado inicial e pelo menos um estado final, mas podem existir vários estados, dependendo do fluxo de processo que se está modelando

    Atividades:
        São ações que vem ser executadas. Quando uma atividade é finalizada, a execução do fluxo do processo é transferida para a próxima atividade. Essa transferência é chamada de transição

    Transição:
        É o caminho a ser seguido ao longo de todo o fluxo do processo, até sua conclusão do processo

    Decisões:
        Tem como objetivo controlar os desvios ao longo do fluxo do processo de negócio

    Bifurcação e união:
        São a junção ou a separação de atividades executadas ao longo de um fluxo de negócio. A bifurcação é a divisão do fluxo de controle, enquanto a união é a sincronização ou junção das atividades realizadas paralelamente, em um único fluxo

    Rais:
        São uma forma de organização lógica das atividades. Essa organização pode estar associada a objetos, a usuários, a atores ou a outra organização lógica que agregue valor para compreender o fluxo das atividades em um diagrama de atividades 

----- Diagrama de sequência

    Um diagrama de sequência mostra a sequência de mensagens trocadas entre objetos e, além disso, mostra as estruturas de controle entre objetos do software.

    Um diagrama de sequência é representado por meio de duas dimensões: uma dimensão horizontal, que representa o conjunto de objetos, e uma dimensão vertical, que representa o tempo de vida de um objeto

Elementos do Diagrama de Sequência
    Ator:
        É o usuário que inicia a interação e a troca de mensagens. Um ator pode ser um usuário de sistema, uma funcionalidade ou um componente de um sistema externo.

    Linha de vida:
        É uma instância ou uma ocorrência de um componente, onde chegam mensagens e de onde partem mensagens. É o tempo de vida de um componente desde o momento em que ele é chamado até quando é finalizado, concluindo seu objetivo 

    Fragmento:
        É onde tratamos as estruturas condicionais que fazem parte do fluxo de vida da mensagem em um objeto ( os if/ else, for / while e qualquer tratamento de exceção ). O fragmento no meio do fluxo de mensagem

    Mensagem:
        É a mensagem que, "de fato", trafega pela linha de vida. A mensagem é representada por uma seta, que segue a direção do fluxo das interações

---- Diagrama de Componentes

    O diagrama de componentes tem como jbetivo apresentar a visão dos pacotes que compõem o sistema e suas dependências. Apresenta a visão de camadas da forma como o software foi projetado, ou seja, é um diagrama relacionado com a arquitetura definida como solução técnica para o software.

    O diagrama de componentes, pode ser visto como um diagrama de aspecto físico do software, baseia-se na abordagem de desenvolvimento em torno de componentes, também conhecido como desenvolvimento baseado em componentes

    O desenvolvimento baseado em componentes é um conceito atrelado à análise e ao desenvolvimento de software orientado a objetos

----- Analisando um Exemplo de Diagrama de Componente

    Finalizando
        A análise de Sistemas é a fase do ciclo de vida de desenvolvimento de um software que busca compreender o que ele deve fazer e como deve fazer para que as necessidades do cliente sejam atendidas

        A análise e o projeto de software mostram uma visão lógica das funcionalidades que devem ser atendidas pelo software e uma visão física de como elas serão implementadas

        
    

















	
